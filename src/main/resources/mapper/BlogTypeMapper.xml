<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.june.dao.BlogTypeMapper" >
  <resultMap id="BaseResultMap" type="BlogType" >
    <id column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    type_id, type_name, order_no
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_type
    where type_id = #{typeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from blog_type
    where type_id = #{typeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="BlogType" >
    insert into blog_type (type_id, type_name, order_no
      )
    values (#{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{orderNo,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="BlogType" >
    insert into blog_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="BlogType" >
    update blog_type
    <set >
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="BlogType" >
    update blog_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=INTEGER}
    where type_id = #{typeId,jdbcType=INTEGER}
  </update>
  
  <!-- 获取除默认分类外的博客类别 ，用于前台按分类查询-->
  <select id="getAllTypeList" resultMap="BaseResultMap">
  	SELECT * FROM blog_type 
  	WHERE type_id != 1
	ORDER BY order_no
  </select>
  
  <!-- 获取除默认分类外的博客类别 ，用于后台显示列表-->
  <select id="getTypeList" parameterType="Map" resultMap="BaseResultMap">
  	SELECT * FROM blog_type 
  	WHERE type_id != 1
	ORDER BY order_no
	<if test="start!=null and size!=null">
		LIMIT #{start},#{size}
	</if>
  </select>
  
  <!-- 获取博客类别数 -->
  <select id="getCount" parameterType="Map" resultType="Integer">
    SELECT COUNT(*) FROM blog_type
  </select>
  
  <!-- 根据名称获取类别id -->
  <select id="getIdByName" resultType="Integer" parameterType="String" >
    SELECT type_id FROM blog_type
    WHERE type_name = #{typeName,jdbcType=VARCHAR}
  </select>
</mapper>